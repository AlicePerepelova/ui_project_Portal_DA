plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.12.0'
    id "io.freefair.lombok" version "8.6"
}

repositories {
    mavenCentral()
}

def restAssuredVersion = "5.3.1",
    allureVersion = "2.21.0"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}
//dependencies {
//    implementation 'io.github.bonigarcia:webdrivermanager:5.0.3'
//}
dependencies {
    testImplementation(
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.junit.jupiter:junit-jupiter:5.10.0",
            'org.slf4j:slf4j-simple:2.0.7',
            'org.assertj:assertj-core:3.24.2',
            'org.aeonbits.owner:owner:1.0.12',
            'com.codeborne:selenide:7.7.3',
    )
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
}
test {
    useJUnitPlatform()
    systemProperties(System.getProperties())
}
tasks.withType(Test).configureEach {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}
tasks.register('web_test', Test) {
    useJUnitPlatform {
        includeTags("WEB")
    }
}

tasks.register('smoke_test', Test) {
    useJUnitPlatform {
        includeTags("SMOKE")
    }
}

tasks.register('regression_test', Test) {
    useJUnitPlatform {
        includeTags("REGRESSION")
    }
}

tasks.register('positive_test', Test) {
    useJUnitPlatform {
        includeTags("POSITIVE")
    }
}

tasks.register('negative_test', Test) {
    useJUnitPlatform {
        includeTags("NEGATIVE")
    }
}