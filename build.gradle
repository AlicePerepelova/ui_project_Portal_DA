plugins {
  id 'java-library'
  id 'io.qameta.allure' version '2.12.0'
  id "io.freefair.lombok" version "8.6"
}

repositories {
  mavenCentral()
}

def selenideVersion = "7.2.1"
def seleniumVersion = "4.15.0"
def restAssuredVersion = "5.3.1"
def allureVersion = "2.21.0"
def junitVersion = "5.10.0"

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
  options.compilerArgs << "-parameters"
}

tasks.withType(Test) {
  systemProperty "file.encoding", "UTF-8"
  systemProperty "selenide.headless", "false"
  systemProperty "BUILD_URL", System.getenv("BUILD_URL") ?: ""


  systemProperty "console.encoding", "UTF-8"
  systemProperty "stdout.encoding", "UTF-8"
  systemProperty "stderr.encoding", "UTF-8"

  systemProperty "selenide.browser", "chrome"
  systemProperty "selenide.pageLoadStrategy", "eager"
}

allure {
  report {
    version.set(allureVersion)
  }
  adapter {
    aspectjWeaver.set(true)
    frameworks {
      junit5 {
        adapterVersion.set(allureVersion)
      }
    }
  }
}

dependencies {
  testImplementation(
      "io.rest-assured:rest-assured:$restAssuredVersion",
      "io.rest-assured:json-schema-validator:$restAssuredVersion",
      "io.qameta.allure:allure-rest-assured:$allureVersion",
      "org.junit.jupiter:junit-jupiter:$junitVersion",
      'org.slf4j:slf4j-simple:2.0.7',
      'org.assertj:assertj-core:3.24.2',
      'org.aeonbits.owner:owner:1.0.12',
      "com.codeborne:selenide:$selenideVersion",
      "org.seleniumhq.selenium:selenium-java:$seleniumVersion",
      "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
  )

  compileOnly 'org.projectlombok:lombok:1.18.30'
  annotationProcessor 'org.projectlombok:lombok:1.18.30'
  testCompileOnly 'org.projectlombok:lombok:1.18.30'
  testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
}

test {
  useJUnitPlatform()
  systemProperties(System.getProperties())

  testLogging {
    events "passed", "skipped", "failed", "standardOut", "standardError"
    showExceptions true
    showCauses true
    showStackTraces true
    exceptionFormat "full"
  }
}

tasks.register('web_test', Test) {
  useJUnitPlatform {
    includeTags("WEB")
  }
}

tasks.register('smoke_test', Test) {
  useJUnitPlatform {
    includeTags("SMOKE")
  }
}

tasks.register('regression_test', Test) {
  useJUnitPlatform {
    includeTags("REGRESSION")
  }
}

tasks.register('positive_test', Test) {
  useJUnitPlatform {
    includeTags("POSITIVE")
  }
}