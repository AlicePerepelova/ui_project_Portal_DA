plugins {
  id 'java-library'
  id 'io.qameta.allure' version '2.11.2'
  id "io.freefair.lombok" version "8.6"
}

repositories {
  mavenCentral()
}

def selenideVersion = "6.16.0"
def seleniumVersion = "4.15.0"
def restAssuredVersion = "5.3.1"
def allureVersion = "2.23.0"
def junitVersion = "5.9.3"

allure {
  report {
    version.set(allureVersion)
  }
  adapter {
    aspectjWeaver.set(true)
    frameworks {
      junit5 {
        adapterVersion.set(allureVersion)
      }
    }
  }
}

dependencies {
  testImplementation(
      "io.rest-assured:rest-assured:$restAssuredVersion",
      "io.rest-assured:json-schema-validator:$restAssuredVersion",
      "io.qameta.allure:allure-rest-assured:$allureVersion",
      "org.junit.jupiter:junit-jupiter:$junitVersion",
      'org.slf4j:slf4j-simple:2.0.7',
      'org.assertj:assertj-core:3.24.2',
      'org.aeonbits.owner:owner:1.0.4',
      "com.codeborne:selenide:$selenideVersion",
      "org.seleniumhq.selenium:selenium-java:$seleniumVersion",
      "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
  )

  compileOnly 'org.projectlombok:lombok:1.18.30'
  annotationProcessor 'org.projectlombok:lombok:1.18.30'
  testCompileOnly 'org.projectlombok:lombok:1.18.30'
  testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
}

tasks.register('web_test', Test) {
  useJUnitPlatform {
    includeTags("WEB")
  }
}

tasks.register('smoke_test', Test) {
  useJUnitPlatform {
    includeTags("SMOKE")
  }
}

tasks.register('positive_test', Test) {
  useJUnitPlatform {
    includeTags("POSITIVE")
  }
  tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()
    testLogging {
      lifecycle {
        events "started", "skipped", "failed", "standard_error", "standard_out"
        exceptionFormat "short"
      }
    }
  }
}